<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Android | GLGJing's Blog]]></title>
  <link href="http://glgjing.github.io/blog/categories/android/atom.xml" rel="self"/>
  <link href="http://glgjing.github.io/"/>
  <updated>2015-04-10T15:44:05+08:00</updated>
  <id>http://glgjing.github.io/</id>
  <author>
    <name><![CDATA[GLGJing]]></name>
    <email><![CDATA[GLGJing@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Android XML 属性参考手册]]></title>
    <link href="http://glgjing.github.io/blog/2015/04/10/android-xml-shu-xing-can-kao-shou-ce/"/>
    <updated>2015-04-10T15:36:04+08:00</updated>
    <id>http://glgjing.github.io/blog/2015/04/10/android-xml-shu-xing-can-kao-shou-ce</id>
    <content type="html"><![CDATA[<h2>TextView</h2>

<ul>
<li>android:autoLink：url、email、phone 等自动转换为可点击的 link</li>
<li>android:autoText：拼写错误检查，错误的会被标出来</li>
<li>android:digits：过略用户可输入的字符，只有被列出的字符可被输入</li>
<li>android:drawableTop：文字内容上方显示的 drawable</li>
<li>android:drawableBottom：文字内容下方显示的 drawable</li>
<li>android:drawableLeft：文字内容左方显示的 drawable</li>
<li>android:drawableRight：文字内容右方显示的 drawable</li>
<li>android:drawableStart：文字内容开始位置显示的 drawable，和 drawableLeft 区别在于 RTL 情况</li>
<li>android:drawableEnd：文字内容结束结位置显示的 drawable，和 drawableRight 区别在于 RTL 情况</li>
<li>android:drawablePadding：文字内容和 drawable 之间的 padding</li>
<li>android:ellipsize：当文字内容超出 TextView 的宽度时会加上&hellip;位置可以设为 start, end, middle, marquee</li>
<li>android:gravity：当 text 的 size 小于 TextView 的 size时，gravity 决定 text 在 TextView 内的对齐方式<!--more--></li>
<li>android:height：TextView 的高度</li>
<li>android:width：TextView 的宽度</li>
<li>android:maxHeight：TextView 的最大高度</li>
<li>android:maxWidth：TextView 的最大宽度</li>
<li>android:minHeight：TextView 的最小高度</li>
<li>android:minWidth：TextView 的最小宽度</li>
<li>android:lines：text 正好显示的行数</li>
<li>android:maxLines：text 的最大显示行数</li>
<li>android:hint：当 text 为空时显示的提示内容</li>
<li>android:linksClickable：设置 link 是否可点击，如果为 false 即使 autoLink 为 true 也不可点击</li>
<li>android:marqueeRepeatLimit：marquee 动画的持续次数</li>
<li>android:editable：设置 TextView 可以有输入法</li>
<li>android:numeric：设置 TextView 的输入为数字输入法</li>
<li>android:phoneNumber：设置 TextView 的输入为电话号码输入法</li>
<li>android:password：text 内容显示为密码形式的小点，而非内容本身</li>
<li>android:scrollHorizontally：设置 TextView 是否可以水平滚动</li>
<li>android:selectAllOnFocus：当 TextView 处于 Focus 状态，Text 是否被全部选中</li>
<li>android:shadowColor：阴影颜色</li>
<li>android:shadowDx：阴影 X 方向偏移</li>
<li>android:shadowDy：阴影 Y 方向偏移</li>
<li>android:shadowRadius：阴影模糊半径</li>
<li>android:singleLine：强制 Text 单行显示</li>
<li>android:text：Text 的内容</li>
<li>android:textAllCaps：将 Text 以大写的方式显示，当 TextView 同时包含 editable 或者 selectable 属性时，该属性被忽略</li>
<li>android:textColor：Text 的颜色</li>
<li>android:textColorHighlight：Text 被选中的高亮颜色</li>
<li>android:textColorHint：提示 Text 的颜色</li>
<li>android:textColorLink：Link 的文字颜色</li>
<li>android:textIsSelectable：Text  内容是否可以被选中</li>
<li>android:textScaleX：水平拉伸比例</li>
<li>android:textSize：Text 的 size</li>
<li>android:textStyle：Text 的 style (bold, italic, bolditalic)</li>
<li>android:typeface：Text 的字体 (normal, sans, serif, monospace)</li>
<li>android:width：设置 TextView 的宽度，目前没发现和 layout_width 有什么明显区别 ？</li>
</ul>


<p>转载请注明出处：<a href="http://glgjing.github.io/">http://glgjing.github.io/</a><br/>
待更新&hellip;</p>
]]></content>
  </entry>
  
</feed>
